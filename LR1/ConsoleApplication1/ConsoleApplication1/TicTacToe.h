#pragma once
#include <iostream>
/// \file TicTacToe.h
/// \authors Stanislav Voitkus
/// \brief TTT Класс реализует игру крестики нолики.
/// \details С помощью класса можно создать поле, заполнить его различными символами. 
class TTT {

public:
	/// \brief Конструктор класса
	/// \details Создаёт поле, указанного размера. Если параметр
	/// меньше 3-х, то попросит ввести большее значение.
	/// \param new_size отвечает за размер поля 
	TTT(int new_size);

	/// \brief Деструктор класса
	/// \details Чистит поле.
	~TTT();

	/// \brief Перегрузка оператора "[]"
	/// \details Позволяет получать и передовать значение клетки
	/// поля. Не рекомендуется использовать для игры без дополнительных
	/// проверок.
	/// \param position отвечает за выбор клетки
	/// \returns Значение клетки.
	char & operator[](int position);

	/// \brief Установка "Х" или "О"
	/// \details Ставит на указаную "Х" или "О" в зависимости от
	/// предыдущего хода. Метод делает проверку ввода. Рекомендуется
	///  использовать для игры.
	/// \param position отвечает за выбор клетки
	void SetPosition(int position);

	/// \brief Получение размера поля
	/// \returns Размер поля
	int GetSize();

	/// \brief Начало новой игры
	/// \details Начинает новую игру. Создаёт поле указанного размера.
	/// Делает проверку корректности ввода параметра.
	/// \param new_size отвечает за размер поля
	void NewGame(int new_size);

private:
	/// \brief Проверка победных комбинаций в рядах
	void rows();
	/// \brief Проверка победных комбинаций в столбцах
	void columns();
	/// \brief Проверка победных комбинаций в 1й диагонали
	void diagonal1();
	/// \brief Проверка победных комбинаций в 2й диагонали
	void diagonal2();
	/// \brief Вызов всех проверок
	void Winner();
	/// \brief Переменная хранящая размер поля
	int size;
	/// \brief Переменнная сделан ли первый ход
	bool first_move;
	/// \brief Переменная закончена ли игра
	bool is_game_over;
	/// \brief Переменная предыдущий ход
	char prev_move;
	/// \brief Массив хранящий поле игры
	char* grid;
};


/// \brief Перегрузка оператора ">>"
/// \details Возможен потоковый ввод элементов в клетки поля.
/// \param os - объект типа istream
/// \param game - объект класса TTT отвечающий за игру
std::istream& operator>>(std::istream& os, TTT& game);
/// \brief Перегрузка оператора "<<"
/// \details Возможен потоковый ввод элементов в клетки поля.
/// \param os - объект типа ostream 
/// \param game - объект класса TTT отвечающий за игру
std::ostream& operator<<(std::ostream& os, TTT& game);